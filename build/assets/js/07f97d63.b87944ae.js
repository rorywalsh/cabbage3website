"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1087],{2768:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>v,contentTitle:()=>w,default:()=>k,frontMatter:()=>x,metadata:()=>j,toc:()=>y});var a=s(4848),o=s(8453),i=s(7838),n=s(967),r=s(341),c=s(6885),d=s(634),l=s(3252),p=s(3927),u=s(1584),h=s(7396),b=s(2301),g=s(8104),m=s(1432);const f='<Cabbage>[\n{"type": "form", "caption": "Combobox Example", "size": {"width": 580.0, "height": 500.0}, "pluginId": "def1"},\n{"type": "rotarySlider", "bounds": {"left": 12.0, "top": 9.0, "width": 86.0, "height": 90.0}, "channel": "att", "range": {"min": 0.0, "max": 1.0, "defaultValue": 0.01, "skew": 1.0, "increment": 0.001}, "text": "Att."},\n{"type": "rotarySlider", "bounds": {"left": 99.0, "top": 9.0, "width": 86.0, "height": 90.0}, "channel": "dec", "range": {"min": 0.0, "max": 1.0, "defaultValue": 0.4, "skew": 1.0, "increment": 0.001}, "text": "Dec."},\n{"type": "rotarySlider", "bounds": {"left": 187.0, "top": 9.0, "width": 86.0, "height": 90.0}, "channel": "sus", "range": {"min": 0.0, "max": 1.0, "defaultValue": 0.7, "skew": 1.0, "increment": 0.001}, "text": "Sus."},\n{"type": "rotarySlider", "bounds": {"left": 274.0, "top": 9.0, "width": 86.0, "height": 90.0}, "channel": "rel", "range": {"min": 0.0, "max": 1.0, "defaultValue": 0.8, "skew": 1.0, "increment": 0.001}, "text": "Rel."},\n{"type": "keyboard", "bounds": {"left": 12.0, "top": 104.0, "width": 348.0, "height": 80.0}, "channel": "keyboard"},\n{"type": "comboBox", "bounds": {"left": 260.0, "top": 188.0, "width": 100.0, "height": 30.0}, "channel": "waveform", "corners": 5.0, "items": ["Saw", "Square", "Triangle"]}\n]\n</Cabbage>\n<CsoundSynthesizer>\n<CsOptions>\n-n -d -+rtmidi=NULL -M0 -m0d --midi-key=4 --midi-velocity-amp=5\n</CsOptions>e\n<CsInstruments>\n; Initialize the global variables. \nksmps = 32\nnchnls = 2\n0dbfs = 1\n\n\n; Rory Walsh 2021 \n;\n; License: CC0 1.0 Universal\n; You can copy, modify, and distribute this file, \n; even for commercial purposes, all without asking permission. \n\ninstr 1\n    \n    iVcoModes[] fillarray 0, 10, 12\n\n    iAtt cabbageGetValue "att"\n    iDec cabbageGetValue "dec"\n    iSus cabbageGetValue "sus"\n    iRel cabbageGetValue "rel"\n    kEnv madsr iAtt, iDec, iSus, iRel\n    aVco vco2 kEnv*p5*.5, cpsmidinn(p4), iVcoModes[cabbageGetValue:i("waveform")]\n    outs aVco, aVco    \nendin\n\n\n</CsInstruments>\n<CsScore>\n;causes Csound to run for about 7000 years...\nf0 z\n</CsScore>\n</CsoundSynthesizer>\n',x={},w="ComboBox",j={id:"cabbage_widgets/combobox",title:"ComboBox",description:"combobox creates a drop-down list of items which users can choose from. Once the user selects an item, the index of their selection will be sent to Csound on a channel named by the channel string. The default value is 0. The first item in the combobox will be seen as a 0.",source:"@site/docs/cabbage_widgets/combobox.mdx",sourceDirName:"cabbage_widgets",slug:"/cabbage_widgets/combobox",permalink:"/cabbage3docs/docs/cabbage_widgets/combobox",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/combobox.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Button",permalink:"/cabbage3docs/docs/cabbage_widgets/button"},next:{title:"GenTable",permalink:"/cabbage3docs/docs/cabbage_widgets/gentable"}},v={},y=[{value:"Unique Properties",id:"unique-properties",level:3},{value:"Items",id:"items",level:4},...n.toc,{value:"Populate",id:"populate",level:4},...r.toc,{value:"Common Properties",id:"common-properties",level:3},{value:"Active",id:"active",level:4},...c.toc,{value:"Automatable",id:"automatable",level:4},...d.toc,{value:"Bounds",id:"bounds",level:4},...l.toc,{value:"Channel",id:"channel",level:4},...i.toc,{value:"Colour",id:"colour",level:4},...p.toc,{value:"Font",id:"font",level:4},...u.toc,{value:"Opacity",id:"opacity",level:4},...g.toc,{value:"Value",id:"value",level:4},...h.toc,{value:"Visible",id:"visible",level:4},...b.toc,{value:"Example",id:"example",level:2}];function _(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"combobox",children:"ComboBox"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"combobox"})," creates a drop-down list of items which users can choose from. Once the user selects an item, the index of their selection will be sent to Csound on a channel named by the channel string. The default value is 0. The first item in the combobox will be seen as a 0."]}),"\n",(0,a.jsxs)(t.p,{children:["A combobox can also be set up to work with strings. In this case, Csound will receive the currently selected string instead of the current index. Note that using a combobox in this way renders it useless in terms of host automation. Host automation can only be achieved when a combobox is sending the ",(0,a.jsx)(t.strong,{children:"current"})," index, rather than the current string."]}),"\n",(0,a.jsx)(t.h1,{id:"list-of-supported-properties",children:"List of supported properties"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"#active",children:"Active"})," | ",(0,a.jsx)(t.a,{href:"#automatable",children:"Automatable"})," | ",(0,a.jsx)(t.a,{href:"#bounds",children:"Bounds"})," | ",(0,a.jsx)(t.a,{href:"#channel",children:"Channel"})," | ",(0,a.jsx)(t.a,{href:"#colour",children:"Colour"})," | ",(0,a.jsx)(t.a,{href:"#font",children:"Font"})," | ",(0,a.jsx)(t.a,{href:"#opacity",children:"Opacity"})," | ",(0,a.jsx)(t.a,{href:"#value",children:"Value"})," | ",(0,a.jsx)(t.a,{href:"#visible",children:"Visible"})," | ",(0,a.jsx)(t.a,{href:"#items",children:"Items"})," | ",(0,a.jsx)(t.a,{href:"#populate",children:"Populate"})]}),"\n",(0,a.jsx)(t.h3,{id:"unique-properties",children:"Unique Properties"}),"\n",(0,a.jsx)("a",{id:"items",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"items",children:"Items"}),"\n",(0,a.jsx)(n.default,{}),"\n",(0,a.jsx)("a",{id:"populate",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"populate",children:"Populate"}),"\n",(0,a.jsx)(r.default,{}),"\n",(0,a.jsx)(t.h3,{id:"common-properties",children:"Common Properties"}),"\n",(0,a.jsx)("a",{id:"active",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"active",children:"Active"}),"\n",(0,a.jsx)(c.default,{}),"\n",(0,a.jsx)("a",{id:"automatable",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"automatable",children:"Automatable"}),"\n",(0,a.jsx)(d.default,{}),"\n",(0,a.jsx)("a",{id:"bounds",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"bounds",children:"Bounds"}),"\n",(0,a.jsx)(l.default,{}),"\n",(0,a.jsx)("a",{id:"channel",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"channel",children:"Channel"}),"\n",(0,a.jsx)(i.default,{}),"\n",(0,a.jsx)("a",{id:"colour",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"colour",children:"Colour"}),"\n",(0,a.jsx)(p.default,{}),"\n",(0,a.jsx)("a",{id:"font",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"font",children:"Font"}),"\n",(0,a.jsx)(u.default,{}),"\n",(0,a.jsx)("a",{id:"opacity",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"opacity",children:"Opacity"}),"\n",(0,a.jsx)(g.default,{}),"\n",(0,a.jsx)("a",{id:"value",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"value",children:"Value"}),"\n",(0,a.jsx)(h.default,{}),"\n",(0,a.jsx)("a",{id:"visible",class:"anchor-target"}),"\n",(0,a.jsx)(t.h4,{id:"visible",children:"Visible"}),"\n",(0,a.jsx)(b.default,{}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(m.A,{language:"csharp",children:f})]})}function k(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(_,{...e})}):_(e)}},6885:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/active",title:"active",description:"Will deactivate a control if 0 is passed. Controls which are deactivated can still be updated from Csound.",source:"@site/docs/cabbage_widgets/properties/active.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/active",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/active",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/active.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"active": 0\n'})}),"\n",(0,a.jsx)(t.p,{children:"Will deactivate a control if 0 is passed. Controls which are deactivated can still be updated from Csound."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},634:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/automatable",title:"automatable",description:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded.",source:"@site/docs/cabbage_widgets/properties/automatable.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/automatable",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/automatable",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/automatable.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"automatable": 1\n'})}),"\n",(0,a.jsx)(t.p,{children:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},3252:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/bounds",title:"bounds",description:"Integer values that set position and size on screen(in pixels).",source:"@site/docs/cabbage_widgets/properties/bounds.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/bounds",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/bounds",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/bounds.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"bounds": {"left":0, "top":0, "width":100, "height":100}\n'})}),"\n",(0,a.jsx)(t.p,{children:"Integer values that set position and size on screen(in pixels)."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},7838:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/channel",title:"channel",description:"The unique channel name associated with a widget/component. This unique name is used to get and set widget properties.",source:"@site/docs/cabbage_widgets/properties/channel.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/channel",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/channel",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/channel.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"channel": "chan"\n'})}),"\n",(0,a.jsx)(t.p,{children:"The unique channel name associated with a widget/component. This unique name is used to get and set widget properties."}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:"In Cabbage 3, channels don't need to start with a letter, and white spaces are permitted."}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},3927:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/colour",title:"colour",description:'Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, "colour"[0, 0, 255]} or "colour"""#ff0000"}.',source:"@site/docs/cabbage_widgets/properties/colour.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/colour",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/colour",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/colour.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"colour": {\n    "fill": "#0295cf",\n    "stroke": {\n        "colour": "#dddddd",\n        "width": 1\n    }\n}\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, ",(0,a.jsx)(t.code,{children:'"colour":{"fill":[0, 0, 255]}'})," or ",(0,a.jsx)(t.code,{children:'"colour":{"fill":""#ff0000"}'}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"stroke"})," object set the outline colour and width for any widget that supports it."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1584:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/font",title:"font",description:"Sets the font size, family, colour and font alignment of the widget, where applicable.",source:"@site/docs/cabbage_widgets/properties/font.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/font",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/font",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/font.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"font": {\n    "family": "Verdana",\n    "size": 0,\n    "align": "centre",\n    "colour":"#ff0000"\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"Sets the font size, family, colour and font alignment of the widget, where applicable."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},967:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/items",title:"items",description:'A list of items that will populate the comboBox/listBox or optionButton. Each item has a corresponding index value. The first item when selected will send a 0, the second item a 1, the third a 2 etc. If this identifier is left out default values of "Item 1", "Item  2", "Item  3", "Item 4" and "Item 5" will be used.',source:"@site/docs/cabbage_widgets/properties/items.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/items",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/items",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/items.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"items": ["item1", "item2", ...]\n'})}),"\n",(0,a.jsxs)(t.p,{children:["A list of items that will populate the ",(0,a.jsx)(t.code,{children:"comboBox"}),"/",(0,a.jsx)(t.code,{children:"listBox"})," or ",(0,a.jsx)(t.code,{children:"optionButton"}),'. Each item has a corresponding index value. The first item when selected will send a 0, the second item a 1, the third a 2 etc. If this identifier is left out default values of "Item 1", "Item  2", "Item  3", "Item 4" and "Item 5" will be used.']})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8104:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/opacity",title:"opacity",description:"The opacity attribute property can vary between 0 (fully transparent) and 1 (fully opaque).",source:"@site/docs/cabbage_widgets/properties/opacity.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/opacity",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/opacity",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/opacity.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"opacity": 1\n'})}),"\n",(0,a.jsx)(t.p,{children:"The opacity attribute property can vary between 0 (fully transparent) and 1 (fully opaque)."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},341:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/populate",title:"populate",description:'Sets the type of file to search for, and the initial directory to look in. If you wish to list all wave files from a set directory, use "*.wav" as the filetype string.',source:"@site/docs/cabbage_widgets/properties/populate.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/populate",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/populate",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/populate.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"populate":{"filetype":"type", "dir":"defaultDir"}\n'})}),"\n",(0,a.jsx)(t.p,{children:'Sets the type of file to search for, and the initial directory to look in. If you wish to list all wave files from a set directory, use "*.wav" as the filetype string.'}),"\n",(0,a.jsx)(t.p,{children:"If no directory is specified, the file browser will try to access the current working directory."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},7396:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/value",title:"value",description:"Value sets the initial state of the widget. In the case of a keyboard widget, it sets the leftmost key to appear.",source:"@site/docs/cabbage_widgets/properties/value.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/value",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/value",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/value.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"value":0\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Value sets the initial state of the widget. In the case of a ",(0,a.jsx)(t.code,{children:"keyboard"})," widget, it sets the leftmost key to appear."]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},2301:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=s(4848),o=s(8453);const i={},n=void 0,r={id:"cabbage_widgets/properties/visible",title:"visible",description:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default.",source:"@site/docs/cabbage_widgets/properties/visible.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/visible",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/visible",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/visible.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'"visible": 1\n'})}),"\n",(0,a.jsx)(t.p,{children:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);