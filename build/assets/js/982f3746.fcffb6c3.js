"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7976],{8747:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var i=a(4848),t=a(8453);a(1432);const s={},l="CabbageSetValue",r={id:"cabbage_opcodes/cabbageSetValue",title:"CabbageSetValue",description:"This opcode set the current value of a widget. It can run at init-time or k-time.",source:"@site/docs/cabbage_opcodes/cabbageSetValue.md",sourceDirName:"cabbage_opcodes",slug:"/cabbage_opcodes/cabbageSetValue",permalink:"/cabbage3docs/docs/cabbage_opcodes/cabbageSetValue",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_opcodes/cabbageSetValue.md",tags:[],version:"current",frontMatter:{}},c={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Initialization",id:"initialization",level:3},{value:"Performance",id:"performance",level:3},{value:"Example:",id:"example",level:2}];function o(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"cabbagesetvalue",children:"CabbageSetValue"})}),"\n",(0,i.jsx)(n.p,{children:"This opcode set the current value of a widget. It can run at init-time or k-time."}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"cabbageSetValue"})," ",(0,i.jsx)(n.em,{children:"SChannel"}),", ",(0,i.jsx)(n.em,{children:"kValue"})," [, ",(0,i.jsx)(n.em,{children:"kTrigger"}),"]\n",(0,i.jsx)(n.strong,{children:"cabbageSetValue"})," ",(0,i.jsx)(n.em,{children:"SChannel"}),", ",(0,i.jsx)(n.em,{children:"iValue"})]}),"\n",(0,i.jsx)(n.h3,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"SChannel"})," \u2013 the name of the channel to query"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"iValue"})," - the value to set the widget too"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"kValue"})," - the value to set the widget too"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"kTrigger"})," - a signal used to trigger a value update"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cs",children:'<Cabbage>[\n    {"type":"form","caption":"Simple Instrument","size":{"width":1000,"height":520},"pluginId":"RMSy"},\n    {"type":"rotarySlider", "channel":"gain", "bounds":{"left":150, "top":10, "width":100, "height":100}, "range":{"min":0, "max":2, "value":1, "skew":1, "increment":0.1}, "text":"Gain"},\n]\n</Cabbage>\n<CsoundSynthesizer>\n<CsOptions>\n-dm0 -n -+rtmidi=NULL -M0 --midi-key=4 --midi-velocity=5\n</CsOptions>\n<CsInstruments>\n; sr set by host\nksmps = 16\nnchnls = 2\n0dbfs = 1\n\ninstr 1 \n    kSliderValue, kTrig cabbageGetValue "gain"\n    //print value of \'gain\' slider each time its updated\n    printf "Value of %s widget is now %f", kTrig, kSliderValue\nendin\n\n</CsInstruments>  \n<CsScore>\ni1 0 z\n</CsScore>\n</CsoundSynthesizer>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);