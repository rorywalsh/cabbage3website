"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5734],{1222:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>w,contentTitle:()=>x,default:()=>k,frontMatter:()=>m,metadata:()=>f,toc:()=>v});var n=a(4848),r=a(8453),s=a(3252),i=a(7838),o=a(7396),c=a(2301),l=a(3233),d=a(1584),p=a(2882),u=a(634),h=a(7085),b=a(1432),g=a(2728);const m={},x="HorizontalSlider",f={id:"cabbage_widgets/horizontalSlider",title:"HorizontalSlider",description:"horizontalSlider allows users to adjust a value by sliding a handle horizontally. This component is useful for controlling parameters in real-time.",source:"@site/docs/cabbage_widgets/horizontalSlider.mdx",sourceDirName:"cabbage_widgets",slug:"/cabbage_widgets/horizontalSlider",permalink:"/cabbage3docs/docs/cabbage_widgets/horizontalSlider",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/horizontalSlider.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"OptionButton",permalink:"/cabbage3docs/docs/cabbage_widgets/optionButton"},next:{title:"VerticalSlider",permalink:"/cabbage3docs/docs/cabbage_widgets/verticalSlider"}},w={},v=[{value:"Unique Properties",id:"unique-properties",level:3},{value:"Value Text Box",id:"value-text-box",level:4},...p.toc,{value:"Popup",id:"popup",level:4},...h.toc,{value:"Common properties",id:"common-properties",level:3},{value:"Bounds",id:"bounds",level:4},...s.toc,{value:"Channel",id:"channel",level:4},...i.toc,{value:"Value",id:"value",level:4},...o.toc,{value:"Visible",id:"visible",level:4},...c.toc,{value:"Colour",id:"colour",level:4},...l.toc,{value:"Font",id:"font",level:4},...d.toc,{value:"Automatable",id:"automatable",level:4},...u.toc,{value:"Example",id:"example",level:2}];function j(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"horizontalslider",children:"HorizontalSlider"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"horizontalSlider"})," allows users to adjust a value by sliding a handle horizontally. This component is useful for controlling parameters in real-time."]}),"\n",(0,n.jsx)(t.h1,{id:"list-of-supported-properties",children:"List of supported properties"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"#bounds",children:"Bounds"})," | ",(0,n.jsx)(t.a,{href:"#channel",children:"Channel"})," | ",(0,n.jsx)(t.a,{href:"#value",children:"Value"})," | ",(0,n.jsx)(t.a,{href:"#visible",children:"Visible"})," | ",(0,n.jsx)(t.a,{href:"#colour",children:"Colour"})," | ",(0,n.jsx)(t.a,{href:"#font",children:"Font"})," |\n| ",(0,n.jsx)(t.a,{href:"#value-text-box",children:"Value Text Box"})," | ",(0,n.jsx)(t.a,{href:"#automatable",children:"Automatable"})," | ",(0,n.jsx)(t.a,{href:"#popup",children:"Popup"})]}),"\n",(0,n.jsx)(t.h3,{id:"unique-properties",children:"Unique Properties"}),"\n",(0,n.jsx)("a",{id:"value-text-box",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"value-text-box",children:"Value Text Box"}),"\n",(0,n.jsx)(p.default,{}),"\n",(0,n.jsx)("a",{id:"popup",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"popup",children:"Popup"}),"\n",(0,n.jsx)(h.default,{}),"\n",(0,n.jsx)(t.h3,{id:"common-properties",children:"Common properties"}),"\n",(0,n.jsx)("a",{id:"bounds",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"bounds",children:"Bounds"}),"\n",(0,n.jsx)(s.default,{}),"\n",(0,n.jsx)("a",{id:"channel",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"channel",children:"Channel"}),"\n",(0,n.jsx)(i.default,{}),"\n",(0,n.jsx)("a",{id:"value",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"value",children:"Value"}),"\n",(0,n.jsx)(o.default,{}),"\n",(0,n.jsx)("a",{id:"visible",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"visible",children:"Visible"}),"\n",(0,n.jsx)(c.default,{}),"\n",(0,n.jsx)("a",{id:"colour",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"colour",children:"Colour"}),"\n",(0,n.jsx)(l.default,{}),"\n",(0,n.jsx)("a",{id:"font",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"font",children:"Font"}),"\n",(0,n.jsx)(d.default,{}),"\n",(0,n.jsx)("a",{id:"automatable",class:"anchor-target"}),"\n",(0,n.jsx)(t.h4,{id:"automatable",children:"Automatable"}),"\n",(0,n.jsx)(u.default,{}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(b.A,{language:"csharp",children:g.A})]})}function k(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(j,{...e})}):j(e)}},634:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/automatable",title:"automatable",description:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded.",source:"@site/docs/cabbage_widgets/properties/automatable.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/automatable",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/automatable",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/automatable.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"automatable": 1\n'})}),"\n",(0,n.jsx)(t.p,{children:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3252:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/bounds",title:"bounds",description:"Integer values that set position and size on screen(in pixels).",source:"@site/docs/cabbage_widgets/properties/bounds.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/bounds",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/bounds",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/bounds.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"bounds": {"left":0, "top":0, "width":100, "height":100}\n'})}),"\n",(0,n.jsx)(t.p,{children:"Integer values that set position and size on screen(in pixels)."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},7838:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/channel",title:"channel",description:"The unique channel name associated with a widget/component. This unique name is used to get and set widget properties.",source:"@site/docs/cabbage_widgets/properties/channel.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/channel",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/channel",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/channel.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"channel": "chan"\n'})}),"\n",(0,n.jsx)(t.p,{children:"The unique channel name associated with a widget/component. This unique name is used to get and set widget properties."}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"In Cabbage 3, channels don't need to start with a letter, and white spaces are permitted."}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},3233:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/colourSliders",title:"colourSliders",description:'Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, "colour"[0, 0, 255]} or "colour"""#ff0000"}. fill sets the table colour, while stroke.outline sets the outline colour.',source:"@site/docs/cabbage_widgets/properties/colourSliders.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/colourSliders",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/colourSliders",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/colourSliders.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"colour": {\n    "fill": "#0295cf",\n    "stroke": {\n        "colour": "#525252",\n        "width": 2\n    },\n    "tracker": {\n        "fill": "#93d200",\n        "background": "#ffffff"\n    }\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, ",(0,n.jsx)(t.code,{children:'"colour":{"fill":[0, 0, 255]}'})," or ",(0,n.jsx)(t.code,{children:'"colour":{"fill":""#ff0000"}'}),". ",(0,n.jsx)(t.code,{children:"fill"})," sets the table colour, while ",(0,n.jsx)(t.code,{children:"stroke.outline"})," sets the outline colour."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1584:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/font",title:"font",description:"Sets the font size, family, colour and font alignment of the widget, where applicable.",source:"@site/docs/cabbage_widgets/properties/font.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/font",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/font",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/font.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"font": {\n    "family": "Verdana",\n    "size": 0,\n    "align": "centre",\n    "colour":"#ff0000"\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"Sets the font size, family, colour and font alignment of the widget, where applicable."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},7085:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/popup",title:"popup",description:"This property will set whether a slider's popup value box will appear. It's enabled by default.",source:"@site/docs/cabbage_widgets/properties/popup.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/popup",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/popup",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/popup.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"popup": 1\n'})}),"\n",(0,n.jsx)(t.p,{children:"This property will set whether a slider's popup value box will appear. It's enabled by default."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},7396:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/value",title:"value",description:"Value sets the initial state of the widget. In the case of a keyboard widget, it sets the leftmost key to appear.",source:"@site/docs/cabbage_widgets/properties/value.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/value",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/value",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/value.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"value":0\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Value sets the initial state of the widget. In the case of a ",(0,n.jsx)(t.code,{children:"keyboard"})," widget, it sets the leftmost key to appear."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2882:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/valueTextBox",title:"valueTextBox",description:"When set to 1 this property will cause a text box to appear with the slider's values. The value box can be double-clicked to allow entering of precision values. Hitting enter will send the value to the widget.",source:"@site/docs/cabbage_widgets/properties/valueTextBox.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/valueTextBox",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/valueTextBox",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/valueTextBox.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"valueTextBox": 0\n'})}),"\n",(0,n.jsx)(t.p,{children:"When set to 1 this property will cause a text box to appear with the slider's values. The value box can be double-clicked to allow entering of precision values. Hitting enter will send the value to the widget."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2301:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var n=a(4848),r=a(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/visible",title:"visible",description:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default.",source:"@site/docs/cabbage_widgets/properties/visible.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/visible",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/visible",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/visible.mdx",tags:[],version:"current",frontMatter:{}},c={},l=[];function d(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'"visible": 1\n'})}),"\n",(0,n.jsx)(t.p,{children:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},2728:(e,t,a)=>{a.d(t,{A:()=>n});const n='<Cabbage>\r\n[\r\n{"type": "form", "caption": "Slider Example", "size": {"width": 360.0, "height": 460.0}, "guiMode": "queue", "pluginId": "def1"},\r\n{"type": "verticalSlider", "bounds": {"left": 20.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic1", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "verticalSlider", "bounds": {"left": 60.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic2", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "verticalSlider", "bounds": {"left": 100.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic3", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "verticalSlider", "bounds": {"left": 140.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic4", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "verticalSlider", "bounds": {"left": 180.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic5", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "verticalSlider", "bounds": {"left": 220.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic6", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "verticalSlider", "bounds": {"left": 260.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic7", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "verticalSlider", "bounds": {"left": 300.0, "top": 20.0, "width": 40.0, "height": 180.0}, "channel": "harmonic8", "range": {"min": 0.0, "max": 1.0, "value": 0.0, "skew": 1.0, "increment": 0.001}},\r\n{"type": "checkBox", "bounds": {"left": 24.0, "top": 208.0, "width": 180.0, "height": 16.0}, "channel": "randomise", "text": "Randomise"}\r\n]\r\n</Cabbage>\r\n<CsoundSynthesizer>\r\n<CsOptions>\r\n-n -d\r\n</CsOptions>e\r\n<CsInstruments>\r\n; Initialize the global variables. \r\nksmps = 16\r\nnchnls = 2\r\n0dbfs = 1\r\n\r\n; Rory Walsh 2021 \r\n;\r\n; License: CC0 1.0 Universal\r\n; You can copy, modify, and distribute this file, \r\n; even for commercial purposes, all without asking permission. \r\n\r\ngiWave ftgen 1, 0, 4096, 10, 1, .2, .1, .2, .1\r\n\r\ninstr 1\r\n\r\n    \r\n    a1 oscili tonek(cabbageGetValue:k("harmonic1"), 10), 50, giWave\r\n    a2 oscili tonek(cabbageGetValue:k("harmonic2"), 10), 100, giWave\r\n    a3 oscili tonek(cabbageGetValue:k("harmonic3"), 10), 150, giWave\r\n    a4 oscili tonek(cabbageGetValue:k("harmonic4"), 10), 200, giWave\r\n    a5 oscili tonek(cabbageGetValue:k("harmonic5"), 10), 250, giWave\r\n    a6 oscili tonek(cabbageGetValue:k("harmonic6"), 10), 300, giWave\r\n    a7 oscili tonek(cabbageGetValue:k("harmonic7"), 10), 350, giWave\r\n    a8 oscili tonek(cabbageGetValue:k("harmonic8"), 10), 400, giWave\r\n    \r\n    kRandom cabbageGet "randomise"\r\n    \r\n    if kRandom == 1 then\r\n        cabbageSetValue "harmonic1", abs(jspline:k(.9, .1, .3))\r\n        cabbageSetValue "harmonic2", abs(jspline:k(.9, .1, .3))\r\n        cabbageSetValue "harmonic3", abs(jspline:k(.9, .1, .3))\r\n        cabbageSetValue "harmonic4", abs(jspline:k(.9, .1, .3))\r\n        cabbageSetValue "harmonic5", abs(jspline:k(.9, .1, .3))\r\n        cabbageSetValue "harmonic6", abs(jspline:k(.9, .1, .3))\r\n        cabbageSetValue "harmonic7", abs(jspline:k(.9, .1, .3))\r\n        cabbageSetValue "harmonic8", abs(jspline:k(.9, .1, .3))\r\n    endif\r\n    \r\n    aMix = a1+a2+a3+a4+a5+a6+a7+a8\r\n    out aMix*.1, aMix*.1\r\nendin       \r\n\r\n</CsInstruments>\r\n<CsScore>\r\n;causes Csound to run for about 7000 years...\r\nf0 z\r\n;starts instrument 1 and runs it for a week\r\ni1 0 z\r\n</CsScore>\r\n</CsoundSynthesizer>\r\n'}}]);